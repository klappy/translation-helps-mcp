# Task ID: 8
# Title: Final Testing & Deployment
# Status: pending
# Dependencies: 1, 2, 3, 5, 6, 7
# Priority: high
# Description: Comprehensive testing with REAL data and production deployment
# Details:
Testing requirements:
1. REAL data validation (not just 200 OK)
2. Performance <500ms for typical queries
3. Actual scripture text validation
4. Real tN, tW, tWL content checks
5. No hanging commands or prompts
6. Documentation matches implementation exactly
7. Fix all deployment scripts to run unattended

6-month vision:
- Industry standard for uW resource access
- Smart endpoints inferring user intent
- Offline capability via .zip downloads

# Test Strategy:
Every test validates real resource data, deployment completes without hanging

# Subtasks:
## 1. Implement Real Data Tests [in-progress]
### Dependencies: None
### Description: Replace status code checks with content validation
### Details:
For each endpoint test:
- Validate actual scripture text
- Check tN content matches reference
- Verify tW articles assembled correctly
- Test tWL mappings are accurate
- Use real verse ranges, not just single verses
- Test edge cases with real data

## 2. Performance Benchmarking [pending]
### Dependencies: 8.1
### Description: Ensure <500ms response for typical queries
### Details:
Benchmark:
- Single verse: <200ms
- Verse range: <300ms
- Chapter: <500ms
- With caching: <100ms
- Concurrent requests handling
- Memory usage under load

## 3. Fix Deployment Scripts [pending]
### Dependencies: 8.1
### Description: Ensure all scripts run without hanging
### Details:
Update all scripts:
- Add --yes to deployment prompts
- Add --no-watch to test commands
- Fix commit message automation
- Remove any pause/wait commands
- Test full deployment unattended

## 4. Documentation Final Review [pending]
### Dependencies: 8.3
### Description: Ensure docs match implementation exactly
### Details:
Verify:
- Every endpoint documented accurately
- Response shapes match reality
- Examples use real data
- No outdated information
- Clear core vs experimental
- Updated changelog

## 5. Production Deployment [pending]
### Dependencies: 8.4
### Description: Deploy with confidence
### Details:
Final deployment:
- Run full test suite
- Deploy to staging first
- Smoke test all endpoints
- Deploy to production
- Monitor for 24 hours
- Prepare rollback plan

## 6. Fix get-translation-word endpoint [pending]
### Dependencies: 8.1
### Description: Implement real article fetching from DCS markdown files instead of returning fake paths
### Details:
Current issue: Returns paths like 'bible/kt/beloved.md' that don't fetch content. Fix: Implement proper DCS markdown fetching using the TWLink RC paths to get actual article content including title, subtitle, and full markdown content.

## 7. Fix fetch-translation-questions path logic [pending]
### Dependencies: 8.1
### Description: Fix wrong file path structure that tries JHN/3.md instead of proper TSV paths
### Details:
Current: Tries to fetch 'JHN/3.md' which doesn't exist. Fix: Use proper TSV file structure from manifest.yaml to fetch translation questions correctly.

## 8. Implement get-context aggregation [pending]
### Dependencies: 8.6, 8.7
### Description: Build the computed data source for comprehensive verse context
### Details:
Implement aggregation of: All scripture versions for the language (full chapter), Translation notes (book/chapter/verse), All unique translation words via TWL, Translation questions, Translation Academy articles from RC links. Return as flexible array structure.

## 9. Add version filtering to fetch-scripture [pending]
### Dependencies: 8.1
### Description: Implement proper version parameter filtering instead of returning all versions
### Details:
Current: Ignores version parameter, always returns all 4 versions. Fix: When version parameter specified, filter results to only that version while maintaining consistent array response structure.

## 10. Implement helpful error messages [pending]
### Dependencies: 8.6, 8.7, 8.8, 8.9
### Description: Add LLM-friendly error messages with clear guidance on how to fix issues
### Details:
For all endpoints: Invalid references should return 400 with list of valid books, Missing parameters should explain defaults and link to discovery endpoints, When resources not found distinguish between file-not-found vs org/lang combo not existing. Always provide explicit examples of correct usage.

